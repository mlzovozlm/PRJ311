/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package RotateWord;

import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Bao Anh Luu
 */
public class Frame extends javax.swing.JFrame {

    static int j = 0;
    String part[];
    boolean pause = true;

    Thread t1 = new Thread() {
        @Override
        public void run() {
            while (true) {
                try {
                    if (!pause) {
                        part[j] = rotate(part[j]);
                        String total = "<html><span style = 'color: blue'>";
                        for (int i = 0; i < part.length; i++) {
                            total += " " + part[i];
                        }
                        total += "</span>";
                        lblDisplay.setText(total);
                        t1.sleep(sldSpeed.getValue());
                        part[j] = rotate(part[j]);
                        total = "<html><span style = 'color: blue'>";
                        for (int i = 0; i < part.length; i++) {
                            total += " " + part[i];
                        }
                        total += "</span>";
                        lblDisplay.setText(total);
                        if (j < part.length - 1) {
                            j++;
                        } else {
                            j = 0;
                        }
                    }
                    t1.sleep(sldSpeed.getValue());
                } catch (InterruptedException ex) {
                    Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    };
    Thread t2 = new Thread() {
        @Override
        public void run() {
            try {
                //sleep(500);
                int i = 0;
                int j = 0;
                while (true) {
                    t2.sleep(500);
                    if (!pause) {
                        String total = "";
                        String temp[] = part;
                        for (int ii = 0; ii < temp.length; ii++) {
                            total += " " + temp[ii];
                        }
                        int n = total.length();
                        total = "<html><span style = 'color: blue'>" + total.substring(0, i) + "</span>"
                                + "<span style = 'color: red'>" + total.charAt(i) + "</span>"
                                + "<html><span style = 'color: blue'>" + total.substring(i + 1) + "</span>";
                        lblDisplay.setText(total);
                        if (i < n - 1) {
                            i++;
                        } else {
                            i = 0;
                        }
                        if (j < temp.length - 1) {
                            j++;
                        } else {
                            j = 0;
                        }
                    }
                }
            } catch (InterruptedException ex) {
                Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    };

    String rotate(String s) {
        String temp = "";
        for (int i = s.length() - 1; i >= 0; i--) {
            temp += s.charAt(i);
        }
        return temp;
    }

    boolean startPause(boolean pause) {
        if (pause == false) {
            butStart.setText("Start");
            return true;
        } else {
            butStart.setText("Pause");
            return false;
        }
    }

    /**
     * Creates new form Frame
     */
    void init() {
        String s = lblDisplay.getText();
        int i = 0;
        StringTokenizer stk = new StringTokenizer(s, " ");
        int n = stk.countTokens();
        part = new String[n];
        while (stk.hasMoreTokens()) {
            part[i] = stk.nextToken();
            i++;
        }
    }

    public Frame() {
        initComponents();
        init();
        t1.start();
        t2.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDisplay = new javax.swing.JLabel();
        butStart = new javax.swing.JButton();
        sldSpeed = new javax.swing.JSlider();
        lblDecrease = new javax.swing.JLabel();
        lblIncrease = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblDisplay.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDisplay.setText("Communism is Love Communism is Life");

        butStart.setText("Start");
        butStart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                butStartMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                butStartMouseExited(evt);
            }
        });

        sldSpeed.setMajorTickSpacing(500);
        sldSpeed.setMaximum(2100);
        sldSpeed.setMinimum(100);
        sldSpeed.setMinorTickSpacing(250);
        sldSpeed.setPaintLabels(true);
        sldSpeed.setPaintTicks(true);

        lblDecrease.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDecrease.setText("Des");
        lblDecrease.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblDecreaseMouseEntered(evt);
            }
        });

        lblIncrease.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIncrease.setText("Inc");
        lblIncrease.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblIncreaseMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(lblDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(butStart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDecrease, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblIncrease, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(sldSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(lblDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(butStart)
                    .addComponent(sldSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblDecrease, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(lblIncrease, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(84, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butStartMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_butStartMouseEntered
        pause = startPause(pause);
    }//GEN-LAST:event_butStartMouseEntered

    private void butStartMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_butStartMouseExited
        pause = startPause(pause);
    }//GEN-LAST:event_butStartMouseExited

    private void lblDecreaseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDecreaseMouseEntered
        sldSpeed.setValue(sldSpeed.getValue() - 100);
    }//GEN-LAST:event_lblDecreaseMouseEntered

    private void lblIncreaseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblIncreaseMouseEntered
        sldSpeed.setValue(sldSpeed.getValue() + 100);
    }//GEN-LAST:event_lblIncreaseMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butStart;
    private javax.swing.JLabel lblDecrease;
    private javax.swing.JLabel lblDisplay;
    private javax.swing.JLabel lblIncrease;
    private javax.swing.JSlider sldSpeed;
    // End of variables declaration//GEN-END:variables
}
