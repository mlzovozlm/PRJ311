/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DetailFrame;

import java.awt.Color;
import java.awt.Font;
import java.util.logging.Level;
import java.util.logging.Logger;

public class DetailFrame extends javax.swing.JFrame {

    Thread t;
    boolean flag = false;
    //1
    private String moveRight(String s, int n) {
        return s.substring(n, s.length()) + s.substring(0, n);
    }
    //2
    private String moveLeft(String s, int n) {
        return s.substring(s.length() - n, s.length()) + s.substring(0, s.length() - n);
    }
    //3
    private void MyColor() {
        String s = lblDisplay.getText();
        String s1 = "<html>";
        for (int i = 0; i < s.length(); i++) {
            if (i % 2 == 0) {
                s1 += "<span style = 'color: red'>" + s.charAt(i) + "</span>";
            } else {
                s1 += "<span style = 'color: blue'>" + s.charAt(i) + "</span>";
            }
        }
    }
    //4
    private void changeColor() {
        Color c = lblDisplay.getForeground();
        lblDisplay.setForeground(Color.RED);
        if (c == Color.RED) {
            lblDisplay.setForeground(Color.BLUE);
        }
        if (c == Color.BLUE) {
            lblDisplay.setForeground(Color.GREEN);
        }
        if (c == Color.GREEN) {
            lblDisplay.setForeground(Color.YELLOW);
        }
        if (c == Color.YELLOW) {
            lblDisplay.setForeground(Color.RED);
        }
    }
    private int count = 0;
    private int fontSize = 10;
    private int step = 1;
    //5
    private void changeFontSize() {
        fontSize += step;
        step = fontSize == 10 ? 1 : step;
        step = fontSize == 40 ? -1 : step;
        lblDisplay.setFont(new Font("Tahoma", 3, fontSize));
    }
    //6
    private void changeFontStyle() {
        count %= 4;
        lblDisplay.setFont(new Font("Tahoma", count++, 30));
        /*
        Regular 0
        Bold 1
        Italic 2
        Bold + Italic 3
         */
    }

    private void initThread() {
        t = new Thread() {
            @Override
            public void run() {
                int i;
                while (true) {
                    if (flag) {
                        changeColor();
                        changeFontStyle();
                        changeFontSize();
                        String s = lblDisplay.getText();
                        try {
                            i = Integer.parseInt(txtMoveUnit.getText());
                            if (i > s.length()) {
                                i %= s.length();
                            }
                        } catch (Exception ee) {
                            i = 1;
                        }
                        if (chkDirection1.isSelected()) {
                            lblDisplay.setText(moveRight(s, i));

                        } else {
                            lblDisplay.setText(moveLeft(s, i));
                        }
                    }
                    try {
                        int n;
                        try {
                            //n = Integer.parseInt(txtSpeed.getText());
                            n = sldSpeed.getValue();
                            String stSpeed = Integer.toString(n);
                            txtSpeed.setText(stSpeed);
                        } catch (Exception ee) {
                            n = 500;
                        }
                        sleep(n);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(DetailFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }

        };
    }

    

    public DetailFrame() {
        initComponents();
        initThread();
        MyColor();
        t.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        lblDisplay = new javax.swing.JLabel();
        butStart = new javax.swing.JButton();
        butPause = new javax.swing.JButton();
        chkDirection1 = new javax.swing.JCheckBox();
        txtSpeed = new javax.swing.JTextField();
        sldSpeed = new javax.swing.JSlider();
        txtMoveUnit = new javax.swing.JTextField();

        jCheckBox1.setText("jCheckBox1");

        jCheckBox2.setText("jCheckBox2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDisplay.setText("Welcome to Hell ");

        butStart.setText("Start");
        butStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butStartActionPerformed(evt);
            }
        });

        butPause.setText("Pause");
        butPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butPauseActionPerformed(evt);
            }
        });

        chkDirection1.setSelected(true);
        chkDirection1.setText("MoveRight");
        chkDirection1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDirection1ActionPerformed(evt);
            }
        });

        txtSpeed.setText("500");
        txtSpeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSpeedActionPerformed(evt);
            }
        });

        sldSpeed.setMajorTickSpacing(250);
        sldSpeed.setMaximum(1000);
        sldSpeed.setMinimum(250);
        sldSpeed.setMinorTickSpacing(50);
        sldSpeed.setPaintLabels(true);
        sldSpeed.setPaintTicks(true);
        sldSpeed.setSnapToTicks(true);

        txtMoveUnit.setText("1");
        txtMoveUnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMoveUnitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(lblDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtMoveUnit)
                    .addComponent(butStart)
                    .addComponent(chkDirection1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(butPause, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSpeed))
                        .addGap(71, 71, 71))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(sldSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(lblDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkDirection1)
                    .addComponent(txtSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sldSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMoveUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butStart)
                    .addComponent(butPause))
                .addGap(90, 90, 90))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butStartActionPerformed
        flag = true;
        butPause.setEnabled(true);
        butStart.setEnabled(false);
        butStart.setText("Continue");
    }//GEN-LAST:event_butStartActionPerformed

    private void butPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butPauseActionPerformed
        flag = false;
        butPause.setEnabled(false);
        butStart.setEnabled(true);
    }//GEN-LAST:event_butPauseActionPerformed

    private void chkDirection1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDirection1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkDirection1ActionPerformed

    private void txtSpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSpeedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSpeedActionPerformed

    private void txtMoveUnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMoveUnitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMoveUnitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DetailFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DetailFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DetailFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DetailFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DetailFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butPause;
    private javax.swing.JButton butStart;
    private javax.swing.JCheckBox chkDirection1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel lblDisplay;
    private javax.swing.JSlider sldSpeed;
    private javax.swing.JTextField txtMoveUnit;
    private javax.swing.JTextField txtSpeed;
    // End of variables declaration//GEN-END:variables
}
